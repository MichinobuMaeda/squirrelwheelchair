name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - .github/workflows/firebase-hosting-pull-request.yml
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Detect whether to deploy Functions
        uses: dorny/paths-filter@v2
        id: WITH_FUNCTIONS
        with:
          filters: |
            src:
              - 'functions/**'
      - name: Detect whether to deploy Firestore
        uses: dorny/paths-filter@v2
        id: WITH_FIRESTORE
        with:
          filters: |
            src:
              - 'firestore.*'
      - name: Detect whether to deploy Storage
        uses: dorny/paths-filter@v2
        id: WITH_STORAGE
        with:
          filters: |
            src:
              - 'storage.*'
      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      - if: |
          steps.WITH_FUNCTIONS.outputs.src == 'true' ||
          steps.WITH_FIRESTORE.outputs.src == 'true' ||
          steps.WITH_STORAGE.outputs.src == 'true'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - if: |
          steps.WITH_FUNCTIONS.outputs.src == 'true' ||
          steps.WITH_FIRESTORE.outputs.src == 'true' ||
          steps.WITH_STORAGE.outputs.src == 'true'
        run: npm ci
      - if: steps.WITH_FUNCTIONS.outputs.src == 'true'
        name: Cache functions/node_modules
        uses: actions/cache@v2
        id: cache-functions-node_modules
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-${{ hashFiles('functions/yarn.lock') }}
      - if: steps.WITH_FUNCTIONS.outputs.src == 'true'
        name: Test and Deploy Functions
        run: |
          npm ci --prefix functions && \
          npm run test --prefix functions && \
          run: export FIREBASE_SERVICE_ACCOUNT_SQUIRRELWHEELCHAIR=$HOME/service_account.json && \\
          npx firebase deploy --only functions --force
      - if: steps.WITH_FIRESTORE.outputs.src == 'true'
        name: Test and Deploy Firestore
        run: |
          run: export FIREBASE_SERVICE_ACCOUNT_SQUIRRELWHEELCHAIR=$HOME/service_account.json && \\
          npx firebase deploy --only firestore
      - if: steps.WITH_STORAGE.outputs.src == 'true'
        name: Test and Deploy Storage
        run: |
          run: export FIREBASE_SERVICE_ACCOUNT_SQUIRRELWHEELCHAIR=$HOME/service_account.json && \\
          npx firebase deploy --only storage

      - name: Set UI version
        run: |
          VERSION=`grep 'version:' pubspec.yaml | sed 's/.*\s//'` && \
            sed "s/for\ test/$VERSION/" -i lib/config/app_info.dart  && \
            echo "{\"version\":\"$VERSION\"}" > web/version.json && \
            echo $VERSION
      - uses: kuhnroyal/flutter-fvm-config-action@v1
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          cache-key: ${{ runner.os }}-${{ hashFiles('package-lock.json ') }}
      - run: flutter pub get
      - run: flutter build web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SQUIRRELWHEELCHAIR }}'
          channelId: live
          projectId: squirrelwheelchair
